<UserControl x:Class="grzyClothTool.Controls.SelectedDrawable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:grzyClothTool.Controls"
             xmlns:models="clr-namespace:grzyClothTool.Models"
             xmlns:helpers="clr-namespace:grzyClothTool.Helpers"
             xmlns:icons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             xmlns:views="clr-namespace:grzyClothTool.Views"
             d:DataContext="{d:DesignInstance Type=models:AddonManagerDesign, IsDesignTimeCreatable=True}"
             x:Name="Control"
             d:Width="900"
             d:Height="600"
             d:Background="White"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Style TargetType="StackPanel">
            <Setter Property="Margin" Value="10" />
        </Style>

        <Style x:Key="5Gap" TargetType="StackPanel">
            <Setter Property="Margin" Value="5,0,5,0" />
        </Style>

        <Style x:Key="FixedListBox" TargetType="ListBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.8"/>
                                <Setter Property="Background" Value="red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="DrawableOptionsTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="225" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <StackPanel Orientation="Vertical" Margin="10">
                        <TextBlock Padding="10" FontSize="16">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Selected {0} drawable(s)">
                                    <Binding Path="SelectedAddon.SelectedDrawables.Count" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Text="WARNING: The selected drawables are not exactly the same. To edit drawable options, select the same or click button below to force override." 
                            Foreground="Red"
                            TextWrapping="WrapWithOverflow"
                            Visibility="{Binding SelectedAddon.IsMultipleDrawablesExactlyTheSame, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                        <Button Content="Force Override" 
                            Margin="5"
                            Width="300"
                            Height="30"
                            Visibility="{Binding SelectedAddon.IsMultipleDrawablesExactlyTheSame, Converter={StaticResource InverseBooleanToVisibilityConverter}}" 
                            Click="AllowOverride_Click"
                            IsEnabled="{Binding SelectedAddon.IsMultipleDrawablesSameType}" />
                        <TextBlock Text="OVERRIDE ENABLED"
                            HorizontalAlignment="Center"
                            Foreground="Green" 
                            Visibility="{Binding SelectedAddon.AllowOverrideDrawables, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Text="Override cannot be enabled for drawables of different type. Select only one type of drawables"
                            HorizontalAlignment="Center"
                            Foreground="Orange" 
                            Visibility="{Binding SelectedAddon.IsMultipleDrawablesSameType, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                    </StackPanel>
                </Grid>
                <Grid IsEnabled="{Binding SelectedAddon.CanEditMultipleDrawables}" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Drawable Options GroupBox - multiple drawables selected -->
                    <GroupBox Header="Drawable Options" Grid.Row="0" Style="{DynamicResource FixedGroupBox}" Margin="2">
                        
                        <StackPanel Orientation="Vertical">
                            <c:ModernLabelComboBox Label="Audio" Tag="Audio" SelectedItem="{Binding SelectedAddon.FirstDrawable.Audio, Mode=TwoWay}" ItemsSource="{Binding SelectedAddon.FirstDrawable.AvailableAudioList}" IsUpdated="SelectedDrawable_Updated" />
                            <c:ModernLabelComboBox Visibility="{Binding SelectedAddon.FirstDrawable.IsProp, Converter={StaticResource BooleanToVisibilityConverter}}" Label="RenderFlag" Tag="RenderFlag" SelectedItem="{Binding SelectedAddon.FirstDrawable.RenderFlag}" ItemsSource="{Binding SelectedAddon.FirstDrawable.AvailableRenderFlagList}" IsUpdated="SelectedDrawable_Updated" />
                            <c:ModernLabelCheckBox Visibility="{Binding SelectedAddon.FirstDrawable.IsComponent, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="HasSkin" Label="Has Skin" IsChecked="{Binding SelectedAddon.FirstDrawable.HasSkin}" IsUpdated="SelectedDrawable_Updated" />
                            <c:ModernLabelComboBox IsMultiSelect="True" Label="Flags" Tag="SelectedFlags" Text="{Binding SelectedAddon.FirstDrawable.FlagsText}" SelectedItems="{Binding SelectedAddon.FirstDrawable.SelectedFlags, Mode=TwoWay}" ItemsSourceSelectable="{Binding SelectedAddon.FirstDrawable.AvailableFlags}" IsUpdated="SelectedDrawable_Updated" />

                            <StackPanel Orientation="Vertical" Margin="0">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SelectedAddon.FirstDrawable.IsProp}" Value="True" />
                                                    <Condition Binding="{Binding SelectedAddon.FirstDrawable.TypeNumeric}" Value="0" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <c:ModernLabelCheckBox x:Name="EnableHairScale" Tag="EnableHairScale" Label="Enable Hair scale" IsChecked="{Binding SelectedAddon.FirstDrawable.EnableHairScale}" IsUpdated="SelectedDrawable_Updated" />
                                <c:ModernLabelNumericUpDown IsEnabled="{Binding ElementName=EnableHairScale, Path=IsChecked}" Tag="HairScaleValue" Label="Hair scale" Value="{Binding SelectedAddon.FirstDrawable.HairScaleValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Increment="0.05" Maximum="1.0" Minimum="0.0" IsUpdated="SelectedDrawable_Updated" />
                            </StackPanel>

                            <StackPanel Orientation="Vertical" Margin="0">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedAddon.FirstDrawable.TypeNumeric}" Value="6">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <c:ModernLabelCheckBox x:Name="EnableHighHeels" Tag="EnableHighHeels" Label="Enable High heels" IsChecked="{Binding SelectedAddon.FirstDrawable.EnableHighHeels}" IsUpdated="SelectedDrawable_Updated" />
                                <c:ModernLabelNumericUpDown IsEnabled="{Binding ElementName=EnableHighHeels, Path=IsChecked}" Tag="HighHeelsValue" Label="High heels amount" Value="{Binding SelectedAddon.FirstDrawable.HighHeelsValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Increment="0.1" Maximum="3.0" Minimum="0.0" IsUpdated="SelectedDrawable_Updated" />
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <!-- Preview Options GroupBox - multiple drawables selected -->
                    <GroupBox Grid.Row="1" Header="Preview Options" IsEnabled="{Binding IsPreviewEnabled}" Style="{DynamicResource FixedGroupBox}" Margin="2">
                        <StackPanel Orientation="Vertical" Margin="0">
                            <TextBlock HorizontalAlignment="center" Text="Run 3D Preview to enable options">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPreviewEnabled}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPreviewEnabled}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <c:ModernLabelCheckBox Tag="EnableKeepPreview" Label="Keep preview" IsChecked="{Binding SelectedAddon.FirstDrawable.EnableKeepPreview}" IsUpdated="SelectedDrawable_Updated" />
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <ContentControl Content="{Binding SelectedAddon.SelectedDrawable}">
        <ContentControl.Style>
            <Style TargetType="ContentControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="225" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Vertical" Margin="0" IsEnabled="{Binding SelectedAddon.SelectedDrawable.IsReserved, Converter={StaticResource InverseBooleanConverter}}" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                        <TextBox FontStyle="Italic" Text="{Binding SelectedAddon.SelectedDrawable.FilePath}" 
                                             TextWrapping="Wrap" Foreground="{DynamicResource Brush500}"
                                             Background="Transparent" BorderThickness="0" IsReadOnly="True"
                                             Cursor="Arrow"
                                             IsReadOnlyCaretVisible="False">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=Instance.DisplaySelectedDrawablePath, Source={x:Static helpers:SettingsHelper.Instance}, Mode=TwoWay}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        <StackPanel Orientation="Horizontal" Margin="2">
                                            <!--<c:ModernLabelTextBox Width="75" Label="Position" Text="{Binding SelectedAddon.SelectedDrawable.Number}" Margin="2" FontSize="18" HorizontalAlignment="Center" />-->
                                            <c:ModernLabelTextBox Width="150" Label="Name" Text="{Binding SelectedAddon.SelectedDrawable.Name, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                                            <c:ModernLabelComboBox Width="125" Label="Drawable type" SelectedItem="{Binding SelectedAddon.SelectedDrawable.TypeName, Mode=TwoWay}" ItemsSource="{Binding SelectedAddon.SelectedDrawable.AvailableTypes}" IsUpdated="DrawableType_Changed" />
                                            <c:ModernLabelComboBox Width="75" Label="Sex" SelectedItem="{Binding SelectedAddon.SelectedDrawable.SexName, Mode=TwoWay}" ItemsSource="{Binding SelectedAddon.SelectedDrawable.AvailableSex}" IsUpdated="DrawableSex_Changed" />
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" Margin="2">
                                            <c:ModernLabelTextBox HorizontalAlignment="Left" Width="300" Label="First person file" IsFileSelection="True" FileExtension=".ydd" Margin="2" FontSize="12" Text="{Binding SelectedAddon.SelectedDrawable.FirstPersonPath, Converter={StaticResource FilePathToShortVersionConverter}}" ToolTip="{Binding SelectedAddon.SelectedDrawable.FirstPersonPath}" ToolTipService.InitialShowDelay="400" />
                                            <c:ModernLabelTextBox HorizontalAlignment="Left" Width="300" Label="Cloth physics file (.yld)" IsFileSelection="True" FileExtension=".yld" Margin="2" FontSize="12" Text="{Binding SelectedAddon.SelectedDrawable.ClothPhysicsPath, Converter={StaticResource FilePathToShortVersionConverter}}" ToolTip="{Binding SelectedAddon.SelectedDrawable.ClothPhysicsPath}" ToolTipService.InitialShowDelay="400" />
                                        </StackPanel>

                                    </StackPanel>
                                    <StackPanel Visibility="{Binding SelectedAddon.SelectedDrawable.IsReserved, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="-60" Grid.Row="1" VerticalAlignment="Center">
                                        <c:CustomButton FontWeight="Medium" Width="300" Height="50" Label="REPLACE RESERVED DRAWABLE" Padding="2" CornerRadius="5" DropdownEnabled="False" MyBtnClickEvent="ReplaceReserved_Click" />
                                    </StackPanel>
                                    <GroupBox Grid.Row="1" Header="Textures" Style="{StaticResource FixedGroupBox}" Margin="2" IsEnabled="{Binding SelectedAddon.SelectedDrawable.IsReserved, Converter={StaticResource InverseBooleanConverter}}">
                                        <ListBox 
                                            Style="{StaticResource FixedListBox}"
                                            x:Name="TextureListBox"
                                            SelectionChanged="TextureListBox_SelectionChanged"
                                            KeyDown="TextureListBox_KeyDown"
                                            BorderBrush="{DynamicResource Brush200}"
                                            Background="Transparent"
                                            Foreground="{DynamicResource Brush950}"
                                            SelectionMode="Extended"
                                            SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged, ElementName=Control}"
                                            ItemsSource="{Binding SelectedAddon.SelectedDrawable.Textures}"
                                            HorizontalContentAlignment="Stretch"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                            d:ItemsSource="{Binding SelectedAddon.SelectedDrawable.Textures}">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Height="20" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="25" />
                                                            <ColumnDefinition Width="60" />
                                                        </Grid.ColumnDefinitions>
                                                        <StackPanel Grid.Column="0" Orientation="Horizontal" >
                                                            <icons:MaterialIcon Kind="ProgressHelper" Width="22" Margin="0,0,2,2">
                                                                <icons:MaterialIcon.Style>
                                                                    <Style TargetType="{x:Type icons:MaterialIcon}" BasedOn="{StaticResource Spin}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                                                                <Setter Property="Visibility" Value="Visible" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsLoading}" Value="False">
                                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </icons:MaterialIcon.Style>
                                                            </icons:MaterialIcon>
                                                            <ContentControl ToolTip="This texture will be optimized on resource build" ToolTipService.InitialShowDelay="0">
                                                                <icons:MaterialIcon Kind="Success" Width="22" Margin="0,0,2,2">
                                                                    <icons:MaterialIcon.Style>
                                                                        <Style TargetType="{x:Type icons:MaterialIcon}">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsOptimizedDuringBuild}" Value="True">
                                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </icons:MaterialIcon.Style>
                                                                </icons:MaterialIcon>
                                                            </ContentControl>
                                                            <ContentControl ToolTip="{Binding TxtDetails.IsOptimizeNeededTooltip}" ToolTipService.InitialShowDelay="0">
                                                                <icons:MaterialIcon Kind="AlertCircleOutline" Width="22" Margin="0,0,2,2">
                                                                    <icons:MaterialIcon.Style>
                                                                        <Style TargetType="{x:Type icons:MaterialIcon}">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding TxtDetails.IsOptimizeNeeded}" Value="True" />
                                                                                        <Condition Binding="{Binding IsOptimizedDuringBuild}" Value="False" />
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                                </MultiDataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </icons:MaterialIcon.Style>
                                                                </icons:MaterialIcon>
                                                            </ContentControl>
                                                            <ContentControl ToolTip="Texture not found. Most likely this .ytd is empty" ToolTipService.InitialShowDelay="0">
                                                                <icons:MaterialIcon Kind="CloseThick" Width="22" Margin="0,0,2,2">
                                                                    <icons:MaterialIcon.Style>
                                                                        <Style TargetType="{x:Type icons:MaterialIcon}">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsPreviewDisabled}" Value="True">
                                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </icons:MaterialIcon.Style>
                                                                </icons:MaterialIcon>
                                                            </ContentControl>
                                                            

                                                            <TextBlock>
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                                <TextBlock.Text>
                                                                    <MultiBinding StringFormat="{}{0}">
                                                                        <Binding Path="DisplayName" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </StackPanel>


                                                        <Button Grid.Column="2" Width="60" Click="TexturePreview_Click" IsEnabled="{Binding IsPreviewDisabled, Converter={StaticResource InverseBooleanConverter}}" Content="Preview" />
                                                        <Grid.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Click="HandleTextureOptimization_Click">
                                                                    <MenuItem.Style>
                                                                        <Style TargetType="MenuItem">
                                                                            <Setter Property="Header" Value="Optimize texture" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsOptimizedDuringBuild}" Value="True">
                                                                                    <Setter Property="Header" Value="Undo optimize" />
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsOptimizedDuringBuild}" Value="False">
                                                                                    <Setter Property="Header" Value="Optimize texture" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </MenuItem.Style>
                                                                </MenuItem>
                                                                <MenuItem Header="Remove" Click="DeleteTexture_Click"/>
                                                                <MenuItem Header="Replace" Click="ReplaceTexture_Click"/>
                                                                <MenuItem Header="Open file location" Click="OpenFileLocation_Click" />
                                                                <MenuItem Header="Export as YTD" Click="ExportTexture_Click" Tag="YTD" />
                                                                <MenuItem Header="Export texture as DDS" Click="ExportTexture_Click" Tag="DDS"/>
                                                                <MenuItem Header="Export texture as PNG" Click="ExportTexture_Click" Tag="PNG"/>
                                                            </ContextMenu>
                                                        </Grid.ContextMenu>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </GroupBox>
                                    <StackPanel IsEnabled="{Binding SelectedAddon.SelectedDrawable.IsReserved, Converter={StaticResource InverseBooleanConverter}}" Grid.Row="2" Margin="0" VerticalAlignment="Stretch" Orientation="Horizontal">
                                        <c:CustomButton Width="150" Label="ADD TEXTURES" Padding="2" CornerRadius="5" DropdownEnabled="False" MyBtnClickEvent="AddTexture_Click" />
                                        <c:CustomButton Image="TrashCanOutline" Width="25" Tooltip="Delete selected drawable" ToolTipService.InitialShowDelay="0" Padding="2" CornerRadius="5" MyBtnClickEvent="DeleteTexture_Click" />
                                    </StackPanel>
                                </Grid>
                                <Grid IsEnabled="{Binding SelectedAddon.SelectedDrawable.IsReserved, Converter={StaticResource InverseBooleanConverter}}" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    
                                    <!-- Drawable Options GroupBox - one drawable selected -->
                                    <GroupBox Header="Drawable Options" Grid.Row="0" Style="{DynamicResource FixedGroupBox}" Margin="2">
                                        <StackPanel Orientation="Vertical">
                                            <c:ModernLabelComboBox Label="Audio" Tag="Audio" SelectedItem="{Binding SelectedAddon.SelectedDrawable.Audio, Mode=TwoWay}" ItemsSource="{Binding SelectedAddon.SelectedDrawable.AvailableAudioList}" IsUpdated="SelectedDrawable_Updated" />
                                            <c:ModernLabelComboBox Visibility="{Binding SelectedAddon.SelectedDrawable.IsProp, Converter={StaticResource BooleanToVisibilityConverter}}" Label="RenderFlag" Tag="RenderFlag" SelectedItem="{Binding SelectedAddon.SelectedDrawable.RenderFlag}" ItemsSource="{Binding SelectedAddon.SelectedDrawable.AvailableRenderFlagList}" IsUpdated="SelectedDrawable_Updated" />
                                            <c:ModernLabelCheckBox Visibility="{Binding SelectedAddon.SelectedDrawable.IsComponent, Converter={StaticResource BooleanToVisibilityConverter}}" Tag="HasSkin" Label="Has Skin" IsChecked="{Binding SelectedAddon.SelectedDrawable.HasSkin}" IsUpdated="SelectedDrawable_Updated" />
                                            <c:ModernLabelComboBox IsMultiSelect="True" Label="Flags" Tag="SelectedFlags" Text="{Binding SelectedAddon.SelectedDrawable.FlagsText}" SelectedItems="{Binding SelectedAddon.SelectedDrawable.SelectedFlags, Mode=TwoWay}" ItemsSourceSelectable="{Binding SelectedAddon.SelectedDrawable.AvailableFlags}" IsUpdated="SelectedDrawable_Updated" />

                                            <StackPanel Orientation="Vertical" Margin="0">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding SelectedAddon.SelectedDrawable.IsProp}" Value="True" />
                                                                    <Condition Binding="{Binding SelectedAddon.SelectedDrawable.TypeNumeric}" Value="0" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>

                                                <c:ModernLabelCheckBox x:Name="EnableHairScale" Tag="EnableHairScale" Label="Enable Hair scale" IsChecked="{Binding SelectedAddon.SelectedDrawable.EnableHairScale}" IsUpdated="SelectedDrawable_Updated" />
                                                <c:ModernLabelNumericUpDown IsEnabled="{Binding ElementName=EnableHairScale, Path=IsChecked}" Tag="HairScaleValue" Label="Hair scale" Value="{Binding SelectedAddon.SelectedDrawable.HairScaleValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Increment="0.05" Maximum="1.0" Minimum="0.0" IsUpdated="SelectedDrawable_Updated" />
                                            </StackPanel>

                                            <StackPanel Orientation="Vertical" Margin="0">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SelectedAddon.SelectedDrawable.TypeNumeric}" Value="6">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>

                                                <c:ModernLabelCheckBox x:Name="EnableHighHeels" Tag="EnableHighHeels" Label="Enable High heels" IsChecked="{Binding SelectedAddon.SelectedDrawable.EnableHighHeels}" IsUpdated="SelectedDrawable_Updated" />
                                                <c:ModernLabelNumericUpDown IsEnabled="{Binding ElementName=EnableHighHeels, Path=IsChecked}" Tag="HighHeelsValue" Label="High heels amount" Value="{Binding SelectedAddon.SelectedDrawable.HighHeelsValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Increment="0.1" Maximum="3.0" Minimum="0.0" IsUpdated="SelectedDrawable_Updated" />
                                            </StackPanel>
                                        </StackPanel>
                                    </GroupBox>
                                    
                                    <!-- Preview Options GroupBox - one drawable selected -->
                                    <GroupBox Grid.Row="1" Header="Preview Options" IsEnabled="{Binding IsPreviewEnabled}" Style="{DynamicResource FixedGroupBox}" Margin="2">
                                        <StackPanel Orientation="Vertical" Margin="0">
                                            <TextBlock HorizontalAlignment="center" Text="Run 3D Preview to enable options">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsPreviewEnabled}" Value="False">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsPreviewEnabled}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <c:ModernLabelCheckBox Tag="EnableKeepPreview" Label="Keep preview" IsChecked="{Binding SelectedAddon.SelectedDrawable.EnableKeepPreview}" IsUpdated="SelectedDrawable_Updated" />
                                        </StackPanel>
                                    </GroupBox>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding SelectedAddon.SelectedDrawable}" Value="{x:Null}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <TextBlock Text="" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SelectedAddon.IsMultipleDrawablesSelected}" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <ContentControl ContentTemplate="{StaticResource DrawableOptionsTemplate}" Content="{Binding }" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ContentControl.Style>
    </ContentControl>
</UserControl>
